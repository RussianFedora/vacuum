Index: src/utils/jid.cpp
===================================================================
--- src/utils/jid.cpp	(revision 1527)
+++ src/utils/jid.cpp	(revision 1528)
@@ -1,7 +1,7 @@
 #include "jid.h"
 
 #include <QTextDocument>
-#include <thirdparty/idn/stringprep.h>
+#include <stringprep.h>
 
 QList<QChar> EscChars = QList<QChar>()       << 0x20 << 0x22 << 0x26 << 0x27 << 0x2f << 0x3a << 0x3c << 0x3e << 0x40; // << 0x5c;
 QList<QString> EscStrings = QList<QString>() <<"\\20"<<"\\22"<<"\\26"<<"\\27"<<"\\2f"<<"\\3a"<<"\\3c"<<"\\3e"<<"\\40"; //<<"\\5c";
Index: src/utils/CMakeLists.txt
===================================================================
--- src/utils/CMakeLists.txt	(revision 1527)
+++ src/utils/CMakeLists.txt	(revision 1528)
@@ -16,6 +16,9 @@
 include_directories(AFTER "${CMAKE_SOURCE_DIR}/src/thirdparty/zlib")
 include(FindX11)
 include_directories(AFTER ${X11_INCLUDE_DIR})
+if (NOT SYSTEM_IDN_FOUND)
+	include_directories("${CMAKE_SOURCE_DIR}/src/thirdparty/idn")
+endif (NOT SYSTEM_IDN_FOUND)
 
 add_translations(TRANSLATIONS "${TARGET_UTILS}" ${SOURCES})
 add_library(${TARGET_UTILS} SHARED ${SOURCES} ${MOC_SOURCES} ${TRANSLATIONS})
@@ -23,12 +26,27 @@
 	VERSION "${VERSION_UTILS}"
 	SOVERSION "${VERSION_UTILS_ABI}")
 
+set(ADD_LIBS qxtglobalshortcut idle)
 if (SYSTEM_ZLIB_FOUND)
-	set(ADD_LIBS qxtglobalshortcut idn minizip idle "${SYSTEM_ZLIB_FOUND}")
+	list(APPEND ADD_LIBS "${SYSTEM_ZLIB_FOUND}")
 else (SYSTEM_ZLIB_FOUND)
-	set(ADD_LIBS qxtglobalshortcut idn minizip idle zlib)
+	list(APPEND ADD_LIBS zlib)
 endif (SYSTEM_ZLIB_FOUND)
 
+if (SYSTEM_IDN_FOUND)
+	list(APPEND ADD_LIBS "${SYSTEM_IDN_FOUND}")
+else (SYSTEM_IDN_FOUND)
+	list(APPEND ADD_LIBS idn)
+endif (SYSTEM_IDN_FOUND)
+
+if (SYSTEM_MINIZIP_FOUND)
+	list(APPEND ADD_LIBS "${SYSTEM_MINIZIP_FOUND}")
+else (SYSTEM_MINIZIP_FOUND)
+	list(APPEND ADD_LIBS minizip)
+	include_directories("${CMAKE_SOURCE_DIR}/src/thirdparty")
+endif (SYSTEM_MINIZIP_FOUND)
+
+
 if (X11_Xscreensaver_FOUND)
 	message(STATUS "Found Xscreensaver: ${X11_Xscreensaver_LIB}")
 	list(APPEND ADD_LIBS "${X11_Xscreensaver_LIB}")
Index: src/utils/unzipfile.cpp
===================================================================
--- src/utils/unzipfile.cpp	(revision 1527)
+++ src/utils/unzipfile.cpp	(revision 1528)
@@ -1,6 +1,6 @@
 #include "unzipfile.h"
 
-#include <thirdparty/minizip/unzip.h>
+#include <minizip/unzip.h>
 
 struct UnzipFileData::ZippedFile {
 	QString name;
Index: src/plugins/optionsmanager/optionsmanager.h
===================================================================
--- src/plugins/optionsmanager/optionsmanager.h	(revision 1527)
+++ src/plugins/optionsmanager/optionsmanager.h	(revision 1528)
@@ -23,12 +23,16 @@
 #include <utils/action.h>
 #include <utils/shortcuts.h>
 #include <utils/widgetmanager.h>
-#include <thirdparty/qtlockedfile/qtlockedfile.h>
 #include "logindialog.h"
 #include "editprofilesdialog.h"
 #include "optionswidget.h"
 #include "optionsheader.h"
 #include "optionsdialog.h"
+#ifdef USE_SYSTEM_QTLOCKEDFILE
+#	include <QtSolutions/qtlockedfile.h>
+#else // USE_SYSTEM_QTLOCKEDFILE
+#	include <thirdparty/qtlockedfile/qtlockedfile.h>
+#endif // USE_SYSTEM_QTLOCKEDFILE
 
 
 class OptionsManager :
Index: src/plugins/optionsmanager/CMakeLists.txt
===================================================================
--- src/plugins/optionsmanager/CMakeLists.txt	(revision 1527)
+++ src/plugins/optionsmanager/CMakeLists.txt	(revision 1528)
@@ -8,5 +8,8 @@
 include("${CMAKE_SOURCE_DIR}/plugins.cmake")
 
 if (IS_ENABLED)
-	target_link_libraries(optionsmanager qtlockedfile)
+	target_link_libraries(optionsmanager "${QTLOCKEDFILE_LIB}")
+	if (SYSTEM_QTLOCKEDFILE_FOUND)
+		add_definitions(-DUSE_SYSTEM_QTLOCKEDFILE)
+	endif (SYSTEM_QTLOCKEDFILE_FOUND)
 endif (IS_ENABLED)
Index: src/thirdparty/CMakeLists.txt
===================================================================
--- src/thirdparty/CMakeLists.txt	(revision 1527)
+++ src/thirdparty/CMakeLists.txt	(revision 1528)
@@ -1,6 +1,12 @@
-add_subdirectory(minizip)
-add_subdirectory(idn)
-add_subdirectory(qtlockedfile)
+if (NOT SYSTEM_MINIZIP_FOUND)
+	add_subdirectory(minizip)
+endif (NOT SYSTEM_MINIZIP_FOUND)
+if (NOT SYSTEM_IDN_FOUND)
+	add_subdirectory(idn)
+endif (NOT SYSTEM_IDN_FOUND)
+if (NOT SYSTEM_QTLOCKEDFILE_FOUND)
+	add_subdirectory(qtlockedfile)
+endif (NOT SYSTEM_QTLOCKEDFILE_FOUND)
 add_subdirectory(jdns)
 add_subdirectory(qxtglobalshortcut)
 add_subdirectory(idle)
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 1527)
+++ CMakeLists.txt	(revision 1528)
@@ -21,6 +21,14 @@
 add_lang_options()
 
 find_library(SYSTEM_ZLIB_FOUND z)
+find_library(SYSTEM_IDN_FOUND idn)
+find_library(SYSTEM_MINIZIP_FOUND minizip)
+find_library(SYSTEM_QTLOCKEDFILE_FOUND QtSolutions_LockedFile-2.4)
+if (SYSTEM_QTLOCKEDFILE_FOUND)
+	set(QTLOCKEDFILE_LIB "${SYSTEM_QTLOCKEDFILE_FOUND}")
+else (SYSTEM_QTLOCKEDFILE_FOUND)
+	set(QTLOCKEDFILE_LIB qtlockedfile)
+endif (SYSTEM_QTLOCKEDFILE_FOUND)
 
 if ("${LANGS}" STREQUAL "")
 	process_lang_options()
